openapi: 3.0.3
info:
  title: WASAPhoto APIs
  description: |-
    This is the documentation for the APIs for the WASAPhoto Project,
    for the accademic year 23/24 by Scutigliani Luca (1914401)
  version: 0.0.1
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  pattern: 'Ë†.*?$'
                  minLength: 3
                  maxLength: 16
        required: true
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: integer
                    minimum: 0
                    example: 123
  /stream/{userID}:
    parameters:
    - name: userID
      in: path
      required: true
      schema:
        type: string
    get:
      tags: ["data retrieval"]
      summary: Returns the user stream
      description: |
        Given a user identifier a stream of photos (images)
        is returned in the response. If the requested userID
        does not exist, an error will be given
      operationId: getMyStream
      responses:
        "200":
          description: The user is found and the stream is the content.
          content:
            application/json:
              schema:
                type: string
                example: TODO - WTF SHOULD THIS BE?
        "404":
          description: The user identifier is not valid.
  /user/{userID}:
    parameters:
    - name: userID
      in: path
      required: true
      schema:
        type: string
    get:
      tags: ["data retrieval"]
      summary: Get user profile
      description: |
        Given a user identifier, the user profile
        is returned. If the user is not found, an
        error will be returned.
      operationId: getUserProfile
      responses:
        "200":
          description: The user is found and the profile is in the content.
          content:
            application/json:
              schema:
                type: string
                example: TODO - CREATE USER COMPONENT
        "404":
          description: The user identifier is not valid.
    post:
      tags: ["data manipulation"]
      summary: Change user username
      description: |
        This can be used to modify the user username
        for a given user identifier.
      operationId: setMyUserName
      requestBody:
        description: New username
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: Maria.00
        required: true
      responses:
        "200":
          description: User username updated successfully.
        "404":
          description: The user identifier is not valid.
